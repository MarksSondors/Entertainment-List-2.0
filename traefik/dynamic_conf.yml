services:
  django:
    loadbalancer:
      servers:
        - url: "http://django:8000"
  
http:
  routers:
    django:
      rule: "Host(`your-actual-domain.com`)"  # Replace with your actual domain
      service: django
      entryPoints:
        - websecure
      tls:
        certResolver: myresolver
      middlewares:
        - redirect-to-https
    
    # Define as many domain routes as needed for your application
    entertainment:
      rule: "Host(`your-actual-domain.com`)"  # Use your production domain
      service: entertainment
      entryPoints:
        - websecure
      tls:
        certResolver: myresolver
      middlewares:
        - redirect-to-https

    api:
      rule: "Host(`traefik.yourdomain.com`)"  # Replace with your actual domain for the dashboard
      service: "api@internal"
      entrypoints:
        - websecure
      middlewares:
        - auth
        - ipwhitelist  # Optional, remove if you don't need IP filtering
      tls:
        certResolver: myresolver

  services:
    django:
      loadBalancer:
        servers:
          - url: "http://django:8000"
    
    entertainment:
      loadBalancer:
        servers:
          - url: "http://web:8000"  # Should match your docker-compose.yml service name

  middlewares:
    redirect-to-https:
      redirectScheme:
        scheme: "https"
        permanent: true

    # Add security headers for production
    security-headers:
      headers:
        frameDeny: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000  # 1 year
        customResponseHeaders:
          X-Content-Type-Options: "nosniff"
          Referrer-Policy: "strict-origin-when-cross-origin"

    auth:
      basicAuth:
        users:
          # Generate these with: htpasswd -nb admin secure_password
          # The below is example only - replace with your own credentials!
          - "admin:$apr1$ruca84Hq$mbjdMZBAG.KWn7vfN/SNK/"  
    
    ipwhitelist:  # Optional: restrict access to specific IPs
      ipWhiteList:
        sourceRange:
          - "127.0.0.1/32"  # localhost
          - "192.168.1.0/24"  # example local network - customize to your needs

entryPoints:
  web:
    address: ":80"
  websecure:
    address: ":443"